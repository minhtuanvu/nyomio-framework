apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pvc-pgdata
  namespace: {{ .Release.Namespace }}
spec:
    {{ if eq .Values.global.clusterMode "server" }}
  storageClassName: longhorn
    {{ else if eq .Values.global.clusterMode "docker" }}
  storageClassName: hostpath
    {{ else if eq .Values.global.clusterMode "minikube" }}
  storageClassName: standard
    {{ end }}
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgresql
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      volumes:
        - name: pv-pgdata
          persistentVolumeClaim:
            claimName: pvc-pgdata
      containers:
        - name: postgres
          image: postgres:alpine
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: pv-pgdata
          env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-user
                  key: password
          lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "while ! nc -z 127.0.0.1 5432; do sleep 1; done && if ! psql -lqt -U postgres | cut -d \\| -f 1 | grep -qw keycloak; then psql -U postgres -c 'create database keycloak'; fi;"]
---
apiVersion: v1
kind: Service
metadata:
  labels:
    kubernetes.io/name: postgres
  name: postgresql
spec:
  ports:
    - port: 5432
      targetPort: 5432
      name: postgres-port
  selector:
    app: postgres
